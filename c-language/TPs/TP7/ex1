#include <stdio.h> 
#include <stdlib.h> 



main() { 
int i, j ; 
int n, m; 
int Imax, Imin,Jmax,Jmin; 
scanf("%d",&n); scanf("%d",&m); 
float T[n][m], Max, Min; 
float **q, *p; 

printf(" Lecture de la matrice \n " ); 
for (i=0;i<n;i++){  
        for (j=0;j<m;j++) {  
              scanf("%f",T[i]+j);}   
  }  

  
q=(float**)malloc(n*sizeof(float*));  
if (q==NULL) 
  {  printf(" On n'a pas pu allouer de la mémoire " );  
    exit(0) ;     }  
for (i=0;i<n;i++)  
  {  q[i]=(float*)malloc(m*sizeof(float));  
  if (q[i]==NULL)  
     {  printf(" On n'a pas pu allouer de la mémoire " ) ;  
       exit(0) ;         }   
  else 
  q[i]=&T[i][0]  ;   
  }  
   
 printf(" Affichage de la matrice \n " );           
 for (i=0;i<n;i++){  
         for (j=0;j<m;j++) {  
              printf(" %f  ", *(q[i]+j));}                
  printf("\n");  
} ; 
for (i=0;i<n;i++){  
   for (j=0;j<m;j++) {  
    *(q[i]+j)= 2**(q[i]+j)*2**(q[i]+j) +2 ;} 
   }      
 printf(" Affichage de la matrice apres modif \n " ); 
 for (i=0;i<n;i++){  
         for (j=0;j<m;j++) {  
              printf(" %f  ", *(q[i]+j));}                
  printf("\n");  
} ; 
Max=Min=*q[0]; 
Imax=Jmax=Imin=Jmin=0; 
for (i=0;i<n;i++){  
   for (j=0;j<m;j++)  
   {  if (Max<=*(q[i]+j)) 
       {Max=*(q[i]+j); 
       Imax=i; 
       Jmax=j; 
       } 
   }  
   };      
for (i=0;i<n;i++){  
   for (j=0;j<m;j++)  
   {  if (Min>=*(q[i]+j)) 
       {Min=*(q[i]+j); 
       Imin=i; 
       Jmin=j; 
       } 
       } 
       }; 
printf(" la max se trouve au ligne %d et colonne %d sa valeur %f \n", Imax,Jmax,Max); 
printf(" la min se trouve au ligne %d et colonne %d sa valeur %f \n", Imin,Jmin,Min); 
                                                                                                                                     
for (i=0;i<n;i++)   
free(q[i]);   // SVP  insistez sur l'odre de free pour un tableau  
free(q);   //  Pour free, il faut faire l'inverse qu'avec malloc : 
getch(); }